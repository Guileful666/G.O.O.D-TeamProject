<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserTrafficLogMapper">
	<!-- Crew Beans 클래스의 객체이름과 클래스이름 명시 -->
	<resultMap type="study.spring.goodspring.model.Crew"
		id="crewMap">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컴럼을 연결 -->
		<result property="crew_no" column="crew_no" />
		<result property="crew_name" column="crew_name" />
		<result property="crew_area" column="crew_area" />
		<result property="crew_sinto" column="crew_sinto" />
		<result property="crew_createtime" column="crew_createtime" />
		<result property="crew_category" column="crew_category" />
		<result property="photoJson" column="crew_photo" />
		<result property="crew_dinto" column="crew_dinto" />
		<result property="crew_member" column="crew_member" />
		<result property="user_info_user_no" column="user_info_user_no" />
		<result property="user_info_user_out"
			column="user_info_user_out" />
		<result property="log_hour" column="log_hour" />
		<result property="log_cnt" column="log_cnt" />
		<result property="log_date" column="log_date" />
		<result property="interval" column="interval" />
	</resultMap>
	<!--Member Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다 -->
	<resultMap type="study.spring.goodspring.model.Member"
		id="MemberMap">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼을 연결한다. -->
		<result property="user_no" column="user_no" />
		<result property="user_id" column="user_id" />
		<result property="user_name" column="user_name" />
		<result property="user_nick" column="user_nick" />
		<result property="user_pw" column="user_pw" />
		<result property="gender" column="gender" />
		<result property="address1" column="address1" />
		<result property="address2" column="address2" />
		<result property="post" column="post" />
		<result property="tel" column="tel" />
		<result property="email" column="email" />
		<result property="photoJson" column="user_photo" />
		<result property="user_admin" column="user_admin" />
		<result property="create_datetime" column="create_datetime" />
		<result property="edit_datetime" column="edit_datetime" />
		<result property="user_out" column="user_out" />
		<result property="log_hour" column="log_hour" />
		<result property="log_cnt" column="log_cnt" />
		<result property="log_date" column="log_date" />
		<result property="interval" column="interval" />
	</resultMap>


	<!--LogTrafficLogMap Beans 클래스의 객체이름과 클래스이름 명시 -->
	<resultMap
		type="study.spring.goodspring.model.UserTrafficLog"
		id="UserTrafficLogMap">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컴럼을 연결 -->
		<result property="log_no" column="log_no" />
		<result property="log_datetime" column="log_datetime" />
		<result property="log_category" column="log_category" />
		<result property="log_content" column="log_content" />
		<result property="user_info_user_no" column="user_info_user_no" />
		<result property="log_hour" column="log_hour" />
		<result property="log_cnt" column="log_cnt" />
		<result property="search_keyword" column="search_keyword" />
	</resultMap>

	<insert id="pageIn"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'page_in', #{user_info_user_no})
	</insert>

	<insert id="pageOut"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'page_out', #{user_info_user_no})
	</insert>

	<insert id="enterBrowser"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'enter_browser', #{user_info_user_no})
	</insert>

	<insert id="addBookmark"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'addBookmark', #{user_info_user_no})
	</insert>

	<insert id="removeBookmark"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'removeBookmark', #{user_info_user_no})
	</insert>

	<insert id="walkRecordStart"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'walkRecordStart', #{user_info_user_no})
	</insert>

	<insert id="walkRecordEnd"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'walkRecordEnd', #{user_info_user_no})
	</insert>

	<insert id="casExLink"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'casExLink', #{user_info_user_no})
	</insert>

	<insert id="walkExLink"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'walkExLink', #{user_info_user_no})
	</insert>

	<insert id="userLogin"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'Login', #{user_info_user_no})
	</insert>

	<insert id="userLogout"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'Logout', #{user_info_user_no})
	</insert>

	<insert id="keyword"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		useGeneratedKeys="true" keyProperty="log_no">
		INSERT INTO user_traffic_log
		(log_datetime, log_category, log_content, user_info_user_no)
		VALUES
		(now(), #{log_category}, 'keyword', #{user_info_user_no})
	</insert>

	<!-- 기간별 로그인 카운트 조회 -->
	<select id="loginCountInterval"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT *
			FROM (
			SELECT hour(log_datetime) as log_hour,
			count(log_datetime) as log_cnt
			FROM user_traffic_log
			WHERE
			log_content
			LIKE 'Login'
			AND DATE_FORMAT(log_datetime, "%Y-%m-%d") =
			CURDATE()
			GROUP BY 1
			ORDER BY 1) loginHourCount;
		</if>
		<if test="interval=='week'">
			SELECT *
			FROM (
			SELECT hour(log_datetime) as log_hour,
			count(log_datetime) as log_cnt
			FROM user_traffic_log
			WHERE
			log_content
			LIKE 'Login'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			week) AND
			NOW()
			GROUP BY 1
			ORDER BY 1) loginWeekCount;
		</if>
		<if test="interval=='month'">
			SELECT *
			FROM (
			SELECT hour(log_datetime) as log_hour,
			count(log_datetime) as log_cnt
			FROM user_traffic_log
			WHERE
			log_content
			LIKE 'Login'
			AND log_datetime BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			month) AND
			NOW()
			GROUP BY 1
			ORDER BY 1) loginmonthCount;
		</if>
	</select>

	<!-- 기간별 회원가입 기간과 인원수 -->
	<select id="joinHourCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT *
			FROM (
			SELECT hour(create_datetime) as
			log_hour,
			count(create_datetime) as log_cnt
			FROM user_info
			WHERE
			DATE_FORMAT(create_datetime, "%Y-%m-%d") =
			CURDATE()
			GROUP BY 1
			ORDER
			BY
			1) joindayCount;
		</if>
		<if test="interval=='week'">
			SELECT *
			FROM (
			SELECT hour(create_datetime) as
			log_hour,
			count(create_datetime) as log_cnt
			FROM user_info
			WHERE
			create_datetime
			BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			week) AND NOW()
			GROUP BY 1
			ORDER
			BY
			1) joinweekCount;
		</if>
		<if test="interval=='month'">
			SELECT *
			FROM (
			SELECT hour(create_datetime) as
			log_hour,
			count(create_datetime) as log_cnt
			FROM user_info
			WHERE
			create_datetime
			BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			month) AND NOW()
			GROUP BY 1
			ORDER
			BY
			1) joinmonthCount;
		</if>
	</select>

	<!-- 기간별 최다 인기검색어 -->
	<select id="TopSearchKeyword"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM user_traffic_log
			WHERE
			log_content like 'keyword'
			AND DATE_FORMAT(log_datetime, "%Y-%m-%d")
			=CURDATE()
			AND substr(log_category, (instr(log_category, '=') +1)) NOT
			LIKE ""
			GROUP BY 1
			ORDER BY 2 DESC
			LIMIT 1;
		</if>
		<if test="interval=='week'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM good.user_traffic_log
			WHERE log_content like 'keyword'
			AND log_datetime BETWEEN
			DATE_ADD(CURDATE(), INTERVAL -1
			week) AND NOW()
			AND
			substr(log_category, (instr(log_category, '=') +1)) NOT LIKE ""
			GROUP
			BY 1
			ORDER BY 2 DESC
			LIMIT 1;
		</if>
		<if test="interval=='month'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM good.user_traffic_log
			WHERE log_content like 'keyword'
			AND log_datetime BETWEEN
			DATE_ADD(CURDATE(), INTERVAL -1
			month) AND NOW()
			AND
			substr(log_category, (instr(log_category, '=') +1)) NOT LIKE ""
			GROUP
			BY 1
			ORDER BY 2 DESC
			LIMIT 1;
		</if>
	</select>

	<!-- 기간별 TOP10 인기검색어 -->
	<select id="Top10SearchKeyword"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM good.user_traffic_log
			WHERE log_content like 'keyword'
			AND DATE_FORMAT(log_datetime,
			"%Y-%m-%d") = CURDATE()
			AND substr(log_category, (instr(log_category,
			'=') +1)) NOT LIKE ""
			GROUP BY 1
			ORDER BY 2 DESC
			LIMIT 10;
		</if>
		<if test="interval=='week'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM good.user_traffic_log
			WHERE log_content like 'keyword'
			AND log_datetime BETWEEN
			DATE_ADD(CURDATE(), INTERVAL -1
			week) AND NOW()
			AND
			substr(log_category, (instr(log_category, '=') +1)) NOT LIKE ""
			GROUP
			BY 1
			ORDER BY 2 DESC
			LIMIT 10;
		</if>
		<if test="interval=='month'">
			SELECT substr(log_category, (instr(log_category, '=') +1)
			)
			as search_keyword, count(*) as log_cnt
			FROM good.user_traffic_log
			WHERE log_content like 'keyword'
			AND log_datetime BETWEEN
			DATE_ADD(CURDATE(), INTERVAL -1
			month) AND NOW()
			AND
			substr(log_category, (instr(log_category, '=') +1)) NOT LIKE ""
			GROUP
			BY 1
			ORDER BY 2 DESC
			LIMIT 10;
		</if>

	</select>
	<!-- 당일(주/월) 찜추가를 한 인원 -->
	<select id="AddBookMarkCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultType="int">
		<if test="interval=='day'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE
			log_content like
			'addBookmark'
			AND DATE_FORMAT(log_datetime,
			"%Y-%m-%d") = CURDATE();
		</if>
		<if test="interval=='week'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE
			log_content like
			'addBookmark'
			AND log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			week) AND NOW()
		</if>
		<if test="interval=='month'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE
			log_content like
			'addBookmark'
			AND log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			month) AND NOW()
		</if>
	</select>

	<!-- 당일(주/월) 찜추가를 한 시간별(날짜별) 인원 -->
	<select id="AddBookMarkHourCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT hour(log_datetime) as log_hour, count(*) as
			log_cnt
			FROM user_traffic_log
			WHERE log_content like 'addBookmark'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			GROUP BY 1
			ORDER BY
			1;
		</if>
		<if test="interval=='week'">
			SELECT date(log_datetime) as log_date, count(*) as
			log_cnt
			FROM user_traffic_log
			WHERE log_content like 'addBookmark'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			week) AND NOW()
			GROUP BY 1
			ORDER BY 1;
		</if>
		<if test="interval=='month'">
			SELECT date(log_datetime) as log_date, count(*) as
			log_cnt
			FROM user_traffic_log
			WHERE log_content like 'addBookmark'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			month) AND NOW()
			GROUP BY 1
			ORDER BY 1;
		</if>
	</select>

	<!-- 당일(주/월)기간동안 찜추가를 한 인원 중 외부사이트로 이동한사람의 인원 -->
	<select id="ExLinkCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultType="int">
		<if test="interval=='day'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			where log_content like '%ExLink'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like'addbookmark'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE())
		</if>
		<if test="interval=='week'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			where
			log_content like '%ExLink'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND NOW()
			AND
			user_info_user_no IN (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like'addbookmark'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND
			NOW())
		</if>
		<if test="interval=='month'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			where log_content like '%ExLink'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW()
			AND
			user_info_user_no IN (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where
			log_content like'addbookmark'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW())
		</if>
	</select>

	<!-- 찜추가를 한 (당일)시간별/(주/월)날짜별 인원 중 외부사이트로 이동한사람의 인원 -->
	<select id="ExLinkHourCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT hour(log_datetime) as log_hour, count(*) as log_cnt
			FROM user_traffic_log
			where log_content like '%ExLink'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like'addbookmark'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE())
			GROUP BY 1
			ORDER BY
			1;
		</if>
		<if test="interval=='week'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			where
			log_content like '%ExLink'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND NOW()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where
			log_content like'addbookmark'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND
			NOW())
			GROUP BY 1
			ORDER BY 1;
		</if>
		<if test="interval=='month'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			where
			log_content like '%ExLink'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where
			log_content like'addbookmark'
			AND log_datetime
			BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW())
			GROUP BY 1
			ORDER BY 1;
		</if>
	</select>
	<!-- 기간별 걷기 기록이용한 사람의 인원 -->
	<select id="RecordCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultType="int">
		<if test="interval=='day'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE log_content LIKE
			"walkRecordStart"
			AND DATE_FORMAT(log_datetime, "%Y-%m-%d") =
			CURDATE();
		</if>
		<if test="interval=='week'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE log_content LIKE
			"walkRecordStart"
			AND log_datetime BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			week) AND NOW()
		</if>
		<if test="interval=='month'">
			SELECT count(*)
			FROM user_traffic_log
			WHERE log_content LIKE
			"walkRecordStart"
			AND log_datetime BETWEEN DATE_ADD(CURDATE(),
			INTERVAL -1
			month) AND NOW()
		</if>

	</select>

	<!-- 기간별 걷기 기록이용한 사람의 시간별(날짜별)인원 -->
	<select id="RecordHourCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT hour(log_datetime) as log_hour, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_content LIKE "walkRecordStart"
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			GROUP BY 1
			ORDER BY
			1;
		</if>
		<if test="interval=='week'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_content LIKE "walkRecordStart"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			week) AND NOW()
			GROUP BY 1
			ORDER BY 1;
		</if>
		<if test="interval=='month'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_content LIKE "walkRecordStart"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1
			month) AND NOW()
			GROUP BY 1
			ORDER BY 1;
		</if>

	</select>
	<!-- 기간별 걷기 기록이용자 중 나만의코스 생성한 사람의 인원 -->
	<select id="MakeLogMapCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultType="int">
		<if test="interval=='day'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where
			log_content like 'walkRecordStart'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE());
		</if>
		<if test="interval=='week'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND NOW()
			AND user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like '%walkRecordStart%'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND
			NOW())
			;
		</if>
		<if test="interval=='month'">
			SELECT count(distinct(user_info_user_no))
			FROM
			user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW()
			AND user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like '%walkRecordStart%'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW())
			;
		</if>

	</select>

	<!-- 기간별 걷기 기록이용자 중 나만의코스 생성한 사람의 시간별(날짜별)인원 -->
	<select id="MakeLogMapHourCount"
		parameterType="study.spring.goodspring.model.UserTrafficLog"
		resultMap="UserTrafficLogMap">
		<if test="interval=='day'">
			SELECT hour(log_datetime) as log_hour, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE()
			AND
			user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like '%walkRecordStart%'
			AND
			DATE_FORMAT(log_datetime, "%Y-%m-%d") = CURDATE())
			GROUP BY 1
			ORDER BY
			1;
		</if>
		<if test="interval=='week'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND NOW()
			AND user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like '%walkRecordStart%'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 week) AND
			NOW())
			GROUP BY 1
			ORDER BY 1;
		</if>
		<if test="interval=='month'">
			SELECT date(log_datetime) as log_date, count(*) as log_cnt
			FROM user_traffic_log
			WHERE log_category LIKE "%myCourseWriteOk"
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW()
			AND user_info_user_no in (
			select distinct(user_info_user_no)
			from
			user_traffic_log
			where log_content like '%walkRecordStart%'
			AND
			log_datetime BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 month) AND
			NOW())
			GROUP BY 1
			ORDER BY 1;
		</if>
	</select>


	<!-- 기간별 크루생성현황 총숫자 -->
	<select id="MakeCrewCount"
		parameterType="study.spring.goodspring.model.Crew" resultType="int">
		SELECT
		count(*)
		FROM crew
		WHERE user_info_user_out LIKE 'N'
		<if test="interval=='day'">
			AND DATE_FORMAT(crew_createtime, "%Y-%m-%d") = CURDATE();
		</if>
		<if test="interval=='week'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 week) AND
			NOW();
		</if>
		<if test="interval=='month'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 month) AND
			NOW();
		</if>
	</select>

	<!-- 기간별 크루생성현황 시간별인원 -->
	<select id="MakeCrewHourCount"
		parameterType="study.spring.goodspring.model.Crew" resultMap="crewMap">
		SELECT
		<if test="interval=='day'">
			hour(crew_createtime) as log_hour
		</if>
		<if test="interval=='week'">
			date(crew_createtime) as log_date
		</if>
		<if test="interval=='month'">
			date(crew_createtime) as log_date
		</if>
		, count(*) as log_cnt
		FROM crew
		WHERE user_info_user_out LIKE 'N'
		<if test="interval=='day'">
			AND DATE_FORMAT(crew_createtime, "%Y-%m-%d") = CURDATE()
		</if>
		<if test="interval=='week'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 week) AND
			NOW()
		</if>
		<if test="interval=='month'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 month) AND
			NOW()
		</if>
		GROUP BY 1
		ORDER BY 1;
	</select>

	<!-- 기간별 크루생성된 크루의 종류 현황 -->
	<select id="CrewCategoryCount"
		parameterType="study.spring.goodspring.model.Crew" resultMap="crewMap">
		SELECT crew_category, count(*) as log_cnt
		FROM crew
		WHERE
		user_info_user_out LIKE 'N'
		<if test="interval=='day'">
			AND DATE_FORMAT(crew_createtime, "%Y-%m-%d") = CURDATE()
		</if>
		<if test="interval=='week'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 week) AND
			NOW()
		</if>
		<if test="interval=='month'">
			AND crew_createtime BETWEEN DATE_ADD(CURDATE(), INTERVAL
			-1 month) AND
			NOW()
		</if>
		GROUP BY 1
		ORDER BY 2 DESC;
	</select>

</mapper>