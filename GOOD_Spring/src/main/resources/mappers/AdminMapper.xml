<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdminMapper">

	<!-- Beans 클래스의 객체이름과 클래스이름 명시 -->
	<resultMap type="study.spring.goodspring.model.Inquiry"
		id="AdminMap">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컴럼을 연결 -->
		<result property="QnA_no" column="QnA_no" />
		<result property="user_info_user_no" column="user_info_user_no" />
		<result property="QnA_title" column="QnA_title" />
		<result property="QnA_text" column="QnA_text" />
		<result property="QnA_category" column="QnA_category" />
		<result property="answer_detail" column="answer_detail" />
		<result property="answer_yn" column="answer_yn" />
		<result property="QnA_create_datetime"
			column="QnA_create_datetime" />
		<result property="answer_create_datetime"
			column="answer_create_datetime" />
	</resultMap>
	
	<!-- 1:1 문의 단일행 조회 -->
   <select id="selectInquiryItemAdmin" resultMap="AdminMap"
      parameterType="study.spring.goodspring.model.Inquiry">
      SELECT QnA_no, user_info_user_no, QnA_title, QnA_text,
      QnA_category, answer_detail, answer_yn,
      QnA_create_datetime,
      answer_create_datetime
      FROM inquiry_qna
      WHERE QnA_no=#{QnA_no}
   </select>

	<!-- 1:1 문의 다중행 조회 -->
   <select id="selectInquiryListAdmin"
      parameterType="study.spring.goodspring.model.Inquiry"
      resultMap="AdminMap">
      SELECT QnA_no, user_info_user_no, QnA_title, QnA_text,
      QnA_category,
      answer_detail, answer_yn,
      QnA_create_datetime,
      answer_create_datetime
      FROM inquiry_qna
      
      <where>
         <choose>
            <!-- 답변상태와 카테고리 둘 다 있을 경우 -->
            <when test="answer_yn != null and answer_yn != ''">
               answer_yn Like #{answer_yn}
               <if test="QnA_category != null and QnA_category != ''">
               AND QnA_category LIKE #{QnA_category}
               </if>
            </when>
            <!-- 답변상태만 있고 카테고리는 없을 경우 -->
            <when test="answer_yn != null and answer_yn != ''">
               answer_yn Like #{answer_yn}
            </when>
            <!-- 답변상태 없고 카테고리만 있을 경우 -->
            <when test="QnA_category != null and QnA_category != ''">
               QnA_category LIKE #{QnA_category}
            </when>
            <!-- 둘 다 없을 경우 -->
            <otherwise>
               <if test="answer_yn != null and answer_yn != ''">
                  answer_yn Like #{answer_yn}
               </if>
               <if test="QnA_category != null and QnA_category != ''">
                 OR QnA_category LIKE #{QnA_category}
               </if>
            </otherwise>
         </choose>
      </where>
      
      ORDER BY QnA_no ASC;
      
      <!-- 페이지네이션에 필요 -->
      <if test="listCount > 0">
         LIMIT #{offset}, #{listCount};
      </if>
   </select>
	
	
	<!-- 1:1문의 답변 저장 기능 -->
	<update id="updateInquiryAdmin"
		parameterType="study.spring.goodspring.model.Inquiry">
		UPDATE inquiry_qna SET
		answer_yn='Y',
		answer_detail=#{answer_detail},
		answer_create_datetime=now()
		WHERE QnA_no=#{QnA_no};
	</update> 
	
	<!-- 페이지네이션에 필요한 데이터 수 조회 기능 정의 -->
   <select id="selectInquiryCountAll"
      parameterType="study.spring.goodspring.model.AdminInquiry"
      resultType="int">
      SELECT COUNT(*) FROM inquiry_qna
   </select>
   
   <select id="selectInquiryBooleanAdmin" 
   parameterType="study.spring.goodspring.model.AdminInquiry" resultMap="AdminMap">
  	  SELECT * FROM inquiry_qna
      
      <where>
         <choose>
            <!-- 답변상태와 카테고리 둘 다 있을 경우 -->
            <when test="answer_yn != null and answer_yn != ''">
               answer_yn Like #{answer_yn}
               <if test="QnA_category != null and QnA_category != ''">
               AND QnA_category LIKE #{QnA_category}
               </if>
            </when>
            <!-- 답변상태만 있고 카테고리는 없을 경우 -->
            <when test="answer_yn != null and answer_yn != ''">
               answer_yn Like #{answer_yn}
            </when>
            <!-- 답변상태 없고 카테고리만 있을 경우 -->
            <when test="QnA_category != null and QnA_category != ''">
               QnA_category LIKE #{QnA_category}
            </when>
            <!-- 둘 다 없을 경우 -->
            <otherwise>
               <if test="answer_yn != null and answer_yn != ''">
                  answer_yn Like #{answer_yn}
               </if>
               <if test="QnA_category != null and QnA_category != ''">
                 OR QnA_category LIKE #{QnA_category}
               </if>
            </otherwise>
         </choose>
      </where>
      
      ORDER BY QnA_no ASC;
      
      <!-- 페이지네이션에 필요 -->
      <if test="listCount > 0">
         LIMIT #{offset}, #{listCount};
      </if>
   		
   </select>


</mapper>