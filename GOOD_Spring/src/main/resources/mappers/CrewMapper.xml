<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CrewMapper">

	<!-- Beans 클래스의 객체이름과 클래스이름 명시 -->
	<resultMap type="study.spring.goodspring.model.Crew"
		id="crewMap">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컴럼을 연결 -->
		<result property="crew_no" column="crew_no" />
		<result property="crew_name" column="crew_name" />
		<result property="crew_area" column="crew_area" />
		<result property="crew_sinto" column="crew_sinto" />
		<result property="crew_createtime" column="crew_createtime" />
		<result property="crew_category" column="crew_category" />
		<result property="photoJson" column="crew_photo" />
		<result property="crew_dinto" column="crew_dinto" />
		<result property="crew_member" column="crew_member" />
		<result property="user_info_user_no" column="user_info_user_no" />



	</resultMap>

	<!-- 크루명 중복 체크 -->
	<select id="crewNameCheck" resultMap="crewMap"
		parameterType="java.lang.String">
		SELECT COUNT(*) FROM crew WHERE crew_name = #{crew_name}

	</select>


	<!-- 단일행 조회 -->
	<select id="selectCrewItem" resultMap="crewMap"
		parameterType="study.spring.goodspring.model.Crew">
		SELECT crew_no, crew_name, crew_area, crew_sinto,
		crew_createtime,
		crew_category, crew_photo, crew_dinto, crew_member,
		user_info_user_no
		FROM crew
		WHERE crew_no = #{crew_no}
	</select>


	<!--다중행 조회 -->
	<select id="selectCrewList"
		parameterType="study.spring.goodspring.model.Crew" resultMap="crewMap">
		SELECT crew_no, crew_name, crew_area, crew_sinto, crew_createtime,
		crew_category, crew_photo, crew_dinto, crew_member,
		user_info_user_no
		FROM crew
		<where>
			<if test="crew_name != null and crew_name != '' ">
				crew_name LIKE CONCAT('%', #{crew_name}, '%')
			</if>

			<if test="crew_category != null and crew_category != '' ">
				OR crew_category LIKE CONCAT('%', #{crew_category}, '%')
			</if>

			<if test="crew_sinto != null and crew_sinto != '' ">
				OR crew_sinto LIKE CONCAT('%', #{crew_sinto}, '%')
			</if>
			<if test="crew_area != null and crew_area != '' ">
				OR crew_area LIKE CONCAT('%', #{crew_area}, '%')
			</if>

		</where>

		<if test="order == 1 ">
			ORDER BY crew_no DESC
		</if>
		<if test="order == 2 ">
			ORDER BY crew_no ASC
		</if>


		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>

	</select>

	<!-- 데이터 저장 기능 -->

	<insert id="insertCrew"
		parameterType="study.spring.goodspring.model.Crew"
		useGeneratedKeys="true" keyProperty="crew_no">
		INSERT INTO crew (crew_name,
		crew_area, crew_sinto, crew_createtime,
		crew_category, crew_photo,
		crew_dinto, user_info_user_no)
		VALUES (#{crew_name}, #{crew_area},
		#{crew_sinto}, now(), #{crew_category},
		#{photoJson}, #{crew_dinto},
		#{user_info_user_no});
	</insert>

	<!-- 데이터 삭제 기능 -->
	<delete id="deleteCrew"
		parameterType="study.spring.goodspring.model.Crew">
		DELETE FROM crew WHERE crew_no = #{crew_no};
	</delete>


	<!-- 데이터 수정 기능 -->
	<update id="updateCrew"
		parameterType="study.spring.goodspring.model.Crew">
		UPDATE crew SET crew_sinto=#{crew_sinto},
		crew_dinto=#{crew_dinto}
		WHERE crew_no = #{crew_no};
	</update>

	<!-- 데이터 수 조회를 위한 기능 정의 -->

	<select id="selectCountAll"
		parameterType="study.spring.goodspring.model.Crew" resultType="int">
		SELECT COUNT(*) FROM crew

		<where>
			<if test="crew_name != null and crew_name != '' ">
				OR crew_name LIKE CONCAT('%', #{crew_name}, '%')
			</if>

			<if test="crew_category != null and crew_category != '' ">
				OR crew_category LIKE CONCAT('%', #{crew_category}, '%')
			</if>

			<if test="crew_sinto != null and crew_sinto != '' ">
				OR crew_sinto LIKE CONCAT('%', #{crew_sinto}, '%')
			</if>
		</where>
	</select>

	<!-- 그룸 멤버 카운트 -->
	<update id="updateCrewMemberCount"
		parameterType="study.spring.goodspring.model.Crew">
		update crew c set crew_member=(select count(member_no)
		from crew_member
		where crew_crew_no=c.crew_no) where crew_no
		=#{crew_no};
	</update>

	<!-- 가입한 크루 조회 -->
	<select id="selectjoinedCrewItem"
		parameterType="study.spring.goodspring.model.CrewMember">
		SELECT c.* FROM user_info u
		INNER JOIN crew_member cm ON u.user_no = cm.user_info_user_no
		INNER JOIN crew c ON c.crew_no = cm.crew_crew_no
		WHERE u.user_no = #{user_no};
	</select>

</mapper>